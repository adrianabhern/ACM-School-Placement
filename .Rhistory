acm_df$acm_id <- 1:nrow(acm_df)
acm_commutes$acm_id <- 1:nrow(acm_commutes)
school_df$sch_id <- 1:nrow(school_df)
# Commute times in long format will be easier to index and subset. This can be accomplished in the output of "gmapsdistance" function later.
acm_commutes_long <-
select(acm_commutes, -or) %>%
gather(dest, dist, -acm_id) %>%
mutate(id_dest = paste(acm_id, dest, sep = "_"))
# Prevent Roommates from being on the same team
# Get list of any ACM who mentioned roommates or was mentioned by others
roommates_df = acm_df[acm_df$Roomates == 'Yes'
| acm_df$Full.Name %in% acm_df$Roommate.Names1
| acm_df$Full.Name %in% acm_df$Roommate.Names2
| acm_df$Full.Name %in% acm_df$Roommate.Names3
| acm_df$Full.Name %in% acm_df$Roommate.Names4, ]
roommates_df = roommates_df[, c("acm_id", "Full.Name", "Roommate.Names1", "Roommate.Names2", "Roommate.Names3", "Roommate.Names4")]
for (x in roommates_df$Full.Name){
# select other rows containing ACM name
other_roommates = roommates_df[x %in% roommates_df$Roommate.Names1
| x %in% roommates_df$Roommate.Names2
| x %in% roommates_df$Roommate.Names3
| x %in% roommates_df$Roommate.Names4]
roommates_list = unique(c(as.character(other_roommates$Roommate.Names1),
as.character(other_roommates$Roommate.Names2),
as.character(other_roommates$Roommate.Names3),
as.character(other_roommates$Roommate.Names4)))
roommates_df$Roomies[roommates_df$Full.Name == x] = paste(sort(roommates_list[!is.na(roommates_list)]), collapse=", ")
}
#     for each row with ACM name
#       append that row on t
# Merge rows only if match
# Remove duplicates
# for each ACM who listed roommates
#   compile house list of roommates (including ACM who filled out survey)
#   write that master list over roommates
# for each ACM with roomamtes
# convert names to acm_id
# find other valid placement (remember not to move an manual.placements)
roommates_df
roommates_list
roommates_df
roommates_df
other_roommates
x = 'Christian Kills In Sight'
roommates_df[x %in% roommates_df$Roommate.Names1
| x %in% roommates_df$Roommate.Names2
| x %in% roommates_df$Roommate.Names3
| x %in% roommates_df$Roommate.Names4]
roommates_df
other_roommates = [x %in% roommates_df$Roommate.Names1
other_roommates = roommates_df[x %in% roommates_df$Roommate.Names1
| x %in% roommates_df$Roommate.Names2
| x %in% roommates_df$Roommate.Names3
| x %in% roommates_df$Roommate.Names4]
other_roommates
other_roommates = roommates_df[x %in% roommates_df$Roommate.Names1
| x %in% roommates_df$Roommate.Names2
| x %in% roommates_df$Roommate.Names3
| x %in% roommates_df$Roommate.Names4]
other_roommates
roommates_df = acm_df[acm_df$Roomates == 'Yes'
| acm_df$Full.Name %in% acm_df$Roommate.Names1
| acm_df$Full.Name %in% acm_df$Roommate.Names2
| acm_df$Full.Name %in% acm_df$Roommate.Names3
| acm_df$Full.Name %in% acm_df$Roommate.Names4, ]
roommates_df = roommates_df[, c("acm_id", "Full.Name", "Roommate.Names1", "Roommate.Names2", "Roommate.Names3", "Roommate.Names4")]
x = 'Christian Kills In Sight'
other_roommates = roommates_df[x %in% roommates_df$Roommate.Names1
| x %in% roommates_df$Roommate.Names2
| x %in% roommates_df$Roommate.Names3
| x %in% roommates_df$Roommate.Names4]
other_roommates
other_roommates = roommates_df[x %in% roommates_df$Roommate.Names1]
other_roommates
roommates_df = acm_df[acm_df$Roomates == 'Yes'
| acm_df$Full.Name %in% acm_df$c(Roommate.Names1, Roommate.Names2)]
roommates_df = acm_df[acm_df$Roomates == 'Yes'
| acm_df$Full.Name %in% acm_df$c("Roommate.Names1", "Roommate.Names2")]
roommates_df = acm_df[acm_df$Roomates == 'Yes'
| acm_df$Full.Name %in% c(acm_df$"Roommate.Names1", acm_df$"Roommate.Names2")]
roommates_df
roommates_df = acm_df[acm_df$Roomates == 'Yes'
| acm_df$Full.Name %in% c(acm_df$"Roommate.Names1", acm_df$"Roommate.Names2")]
roommates_df
roommates_df = acm_df[acm_df$Roomates == 'Yes'
| acm_df$Full.Name %in% acm_df$Roommate.Names1
| acm_df$Full.Name %in% acm_df$Roommate.Names2
| acm_df$Full.Name %in% acm_df$Roommate.Names3
| acm_df$Full.Name %in% acm_df$Roommate.Names4, ]
have_roommates = acm_df[acm_df$Roomates == 'Yes'
| acm_df$Full.Name %in% acm_df$Roommate.Names1
| acm_df$Full.Name %in% acm_df$Roommate.Names2
| acm_df$Full.Name %in% acm_df$Roommate.Names3
| acm_df$Full.Name %in% acm_df$Roommate.Names4, ]
roommates_df = acm_df[acm_df$Roomates == 'Yes'
| acm_df$Full.Name %in% acm_df$Roommate.Names1
| acm_df$Full.Name %in% acm_df$Roommate.Names2
| acm_df$Full.Name %in% acm_df$Roommate.Names3
| acm_df$Full.Name %in% acm_df$Roommate.Names4, ]
roommates_df = roommates_df[, c("acm_id", "Full.Name", "Roommate.Names1", "Roommate.Names2", "Roommate.Names3", "Roommate.Names4")]
for (x in roommates_df$Full.Name[1:3]){
# select other rows containing ACM name
#roommates_df$Full.Name == x
other_roommates = roommates_df[x %in% roommates_df$Roommate.Names1
| x %in% roommates_df$Roommate.Names2
| x %in% roommates_df$Roommate.Names3
| x %in% roommates_df$Roommate.Names4]
roommates_list = unique(c(as.character(other_roommates$Roommate.Names1),
as.character(other_roommates$Roommate.Names2),
as.character(other_roommates$Roommate.Names3),
as.character(other_roommates$Roommate.Names4)))
roommates_df$Roomies[roommates_df$Full.Name == x] = paste(sort(roommates_list[!is.na(roommates_list)]), collapse=", ")
}
other_roommates
paste(x)
for (x in roommates_df$Full.Name[1:3]){
# select other rows containing ACM name
#roommates_df$Full.Name == x
paste(x)
other_roommates = roommates_df[x %in% roommates_df$Roommate.Names1
| x %in% roommates_df$Roommate.Names2
| x %in% roommates_df$Roommate.Names3
| x %in% roommates_df$Roommate.Names4]
roommates_list = unique(c(as.character(other_roommates$Roommate.Names1),
as.character(other_roommates$Roommate.Names2),
as.character(other_roommates$Roommate.Names3),
as.character(other_roommates$Roommate.Names4)))
roommates_df$Roomies[roommates_df$Full.Name == x] = paste(sort(roommates_list[!is.na(roommates_list)]), collapse=", ")
}
roommates_df = acm_df[acm_df$Roomates == 'Yes'
| acm_df$Full.Name %in% acm_df$Roommate.Names1
| acm_df$Full.Name %in% acm_df$Roommate.Names2
| acm_df$Full.Name %in% acm_df$Roommate.Names3
| acm_df$Full.Name %in% acm_df$Roommate.Names4, ]
roommates_df = roommates_df[, c("acm_id", "Full.Name", "Roommate.Names1", "Roommate.Names2", "Roommate.Names3", "Roommate.Names4")]
x = "Monica Welch"
other_roommates = roommates_df[x %in% roommates_df$Roommate.Names1
| x %in% roommates_df$Roommate.Names2
| x %in% roommates_df$Roommate.Names3
| x %in% roommates_df$Roommate.Names4]
other_roommates
other_roommates = roommates_df[x %in% roommates_df$Roommate.Names1]
other_roommates
roommates_df = acm_df[acm_df$Roomates == 'Yes'
| acm_df$Full.Name %in% acm_df$Roommate.Names1
| acm_df$Full.Name %in% acm_df$Roommate.Names2
| acm_df$Full.Name %in% acm_df$Roommate.Names3
| acm_df$Full.Name %in% acm_df$Roommate.Names4, ]
roommates_df = roommates_df[, c("acm_id", "Full.Name", "Roommate.Names1", "Roommate.Names2", "Roommate.Names3", "Roommate.Names4")]
x = "Monica Welch"
roommates_df[roommates_df == x]
roommates_df = acm_df[acm_df$Roomates == 'Yes'
| acm_df$Full.Name %in% acm_df$Roommate.Names1
| acm_df$Full.Name %in% acm_df$Roommate.Names2
| acm_df$Full.Name %in% acm_df$Roommate.Names3
| acm_df$Full.Name %in% acm_df$Roommate.Names4, ]
x = "Monica Welch"
apply(roommates_df, 1, function(r) any(r %in% c(x)))
subset(roommates_df, apply(x, 1, function(x){any(x == "Monica Welch")}))
roommates_df = acm_df[acm_df$Roomates == 'Yes'
| acm_df$Full.Name %in% acm_df$Roommate.Names1
| acm_df$Full.Name %in% acm_df$Roommate.Names2
| acm_df$Full.Name %in% acm_df$Roommate.Names3
| acm_df$Full.Name %in% acm_df$Roommate.Names4, ]
roommates_df = roommates_df[, c("acm_id", "Full.Name", "Roommate.Names1", "Roommate.Names2", "Roommate.Names3", "Roommate.Names4")]
subset(roommates_df, apply(x, 1, function(x){any(x == "Monica Welch")}))
subset(roommates_df, apply(x, function(x){any(x == "Monica Welch")}))
subset(roommates_df, apply(x, function(x) any(x == "Monica Welch")))
subset(roommates_df, apply(x, function(x){any(x == "Monica Welch")}))
subset(roommates_df, apply(roommates_df, function(x){any(x == "Monica Welch")}))
subset(roommates_df, apply(roommates_df, 1, function(x){any(x == "Monica Welch")}))
x = "Monica Welch"
subset(roommates_df, apply(roommates_df, 1, function(x){any(x == x)}))
y = "Monica Welch"
subset(roommates_df, apply(roommates_df, 1, function(x){any(x == y)}))
roommates_df = acm_df[acm_df$Roomates == 'Yes'
| acm_df$Full.Name %in% acm_df$Roommate.Names1
| acm_df$Full.Name %in% acm_df$Roommate.Names2
| acm_df$Full.Name %in% acm_df$Roommate.Names3
| acm_df$Full.Name %in% acm_df$Roommate.Names4, ]
roommates_df = roommates_df[, c("acm_id", "Full.Name", "Roommate.Names1", "Roommate.Names2", "Roommate.Names3", "Roommate.Names4")]
for (x in roommates_df$Full.Name[1:3]){
# select other rows containing ACM name
#roommates_df$Full.Name == x
other_roommates = subset(roommates_df, apply(roommates_df, 1, function(x){any(x == y)}))
roommates_list = unique(c(as.character(other_roommates$Full.Name),
as.character(other_roommates$Roommate.Names1),
as.character(other_roommates$Roommate.Names2),
as.character(other_roommates$Roommate.Names3),
as.character(other_roommates$Roommate.Names4)))
roommates_df$Roomies[roommates_df$Full.Name == x] = paste(sort(roommates_list[!is.na(roommates_list)]), collapse=", ")
}
roommates_df
for (x in roommates_df$Full.Name[1:3]){
# select other rows containing ACM name
#roommates_df$Full.Name == x
other_roommates = subset(roommates_df, apply(roommates_df, 1, function(y){any(y == x)}))
roommates_list = unique(c(as.character(other_roommates$Full.Name),
as.character(other_roommates$Roommate.Names1),
as.character(other_roommates$Roommate.Names2),
as.character(other_roommates$Roommate.Names3),
as.character(other_roommates$Roommate.Names4)))
roommates_df$Roomies[roommates_df$Full.Name == x] = paste(sort(roommates_list[!is.na(roommates_list)]), collapse=", ")
}
roommates_df
for (x in roommates_df$Full.Name){
# select other rows containing ACM name
#roommates_df$Full.Name == x
other_roommates = subset(roommates_df, apply(roommates_df, 1, function(y){any(y == x)}))
roommates_list = unique(c(as.character(other_roommates$Full.Name),
as.character(other_roommates$Roommate.Names1),
as.character(other_roommates$Roommate.Names2),
as.character(other_roommates$Roommate.Names3),
as.character(other_roommates$Roommate.Names4)))
roommates_df$Roomies[roommates_df$Full.Name == x] = paste(sort(roommates_list[!is.na(roommates_list)]), collapse=", ")
}
roommates_df
for (x in roommates_df$Full.Name){
# select other rows containing ACM name
#roommates_df$Full.Name == x
other_roommates = subset(roommates_df, apply(roommates_df, 1, function(y){any(y == x)}))
roommates_list = unique(c(as.character(other_roommates$Full.Name),
as.character(other_roommates$Roommate.Names1),
as.character(other_roommates$Roommate.Names2),
as.character(other_roommates$Roommate.Names3),
as.character(other_roommates$Roommate.Names4)))
roommate_list = sort(roommates_list[!is.na(roommates_list)])
roommates_df$Roommate.Names1[roommates_df$Full.Name == x] = roommate_list[1]
#roommates_df$Roomies[roommates_df$Full.Name == x] = paste(sort(roommates_list[!is.na(roommates_list)]), collapse=", ")
}
roommates_df = acm_df[acm_df$Roomates == 'Yes'
| acm_df$Full.Name %in% acm_df$Roommate.Names1
| acm_df$Full.Name %in% acm_df$Roommate.Names2
| acm_df$Full.Name %in% acm_df$Roommate.Names3
| acm_df$Full.Name %in% acm_df$Roommate.Names4, ]
roommates_df = roommates_df[, c("acm_id", "Full.Name", "Roommate.Names1", "Roommate.Names2", "Roommate.Names3", "Roommate.Names4")]
roommates_df[] <- lapply(roommates_df, as.character)
for (x in roommates_df$Full.Name){
# select other rows containing ACM name
#roommates_df$Full.Name == x
other_roommates = subset(roommates_df, apply(roommates_df, 1, function(y){any(y == x)}))
roommates_list = unique(c(as.character(other_roommates$Full.Name),
as.character(other_roommates$Roommate.Names1),
as.character(other_roommates$Roommate.Names2),
as.character(other_roommates$Roommate.Names3),
as.character(other_roommates$Roommate.Names4)))
roommate_list = sort(roommates_list[!is.na(roommates_list)])
roommates_df$Roommate.Names1[roommates_df$Full.Name == x] = roommate_list[1]
#roommates_df$Roomies[roommates_df$Full.Name == x] = paste(sort(roommates_list[!is.na(roommates_list)]), collapse=", ")
}
roommates_df
roommates_df = acm_df[acm_df$Roomates == 'Yes'
| acm_df$Full.Name %in% acm_df$Roommate.Names1
| acm_df$Full.Name %in% acm_df$Roommate.Names2
| acm_df$Full.Name %in% acm_df$Roommate.Names3
| acm_df$Full.Name %in% acm_df$Roommate.Names4, ]
roommates_df = roommates_df[, c("acm_id", "Full.Name", "Roommate.Names1", "Roommate.Names2", "Roommate.Names3", "Roommate.Names4")]
roommates_df[] <- lapply(roommates_df, as.character)
for (x in roommates_df$Full.Name){
# select other rows containing ACM name
#roommates_df$Full.Name == x
other_roommates = subset(roommates_df, apply(roommates_df, 1, function(y){any(y == x)}))
roommates_list = unique(c(as.character(other_roommates$Full.Name),
as.character(other_roommates$Roommate.Names1),
as.character(other_roommates$Roommate.Names2),
as.character(other_roommates$Roommate.Names3),
as.character(other_roommates$Roommate.Names4)))
roommate_list = sort(roommates_list[!is.na(roommates_list)])
roommates_df$Roommate.Names1[roommates_df$Full.Name == x] = roommate_list[1]
roommates_df$Roommate.Names2[roommates_df$Full.Name == x] = roommate_list[2]
roommates_df$Roommate.Names3[roommates_df$Full.Name == x] = roommate_list[3]
roommates_df$Roommate.Names4[roommates_df$Full.Name == x] = roommate_list[4]
#roommates_df$Roomies[roommates_df$Full.Name == x] = paste(sort(roommates_list[!is.na(roommates_list)]), collapse=", ")
}
roommates_df
roommates_df = acm_df[acm_df$Roomates == 'Yes'
| acm_df$Full.Name %in% acm_df$Roommate.Names1
| acm_df$Full.Name %in% acm_df$Roommate.Names2
| acm_df$Full.Name %in% acm_df$Roommate.Names3
| acm_df$Full.Name %in% acm_df$Roommate.Names4, ]
roommates_df = roommates_df[, c("acm_id", "Full.Name", "Roommate.Names1", "Roommate.Names2", "Roommate.Names3", "Roommate.Names4")]
roommates_df[] <- lapply(roommates_df, as.character)
for (x in roommates_df$Full.Name){
# select other rows containing ACM name
#roommates_df$Full.Name == x
other_roommates = subset(roommates_df, apply(roommates_df, 1, function(y){any(y == x)}))
roommates_list = unique(c(as.character(other_roommates$Full.Name),
as.character(other_roommates$Roommate.Names1),
as.character(other_roommates$Roommate.Names2),
as.character(other_roommates$Roommate.Names3),
as.character(other_roommates$Roommate.Names4)))
roommate_list = sort(roommates_list[!is.na(roommates_list)])
acm_df$Roommate.Names1[roommates_df$Full.Name == x] = roommate_list[1]
acm_df$Roommate.Names2[roommates_df$Full.Name == x] = roommate_list[2]
acm_df$Roommate.Names3[roommates_df$Full.Name == x] = roommate_list[3]
acm_df$Roommate.Names4[roommates_df$Full.Name == x] = roommate_list[4]
#roommates_df$Roomies[roommates_df$Full.Name == x] = paste(sort(roommates_list[!is.na(roommates_list)]), collapse=", ")
}
roommates_df = acm_df[acm_df$Roomates == 'Yes'
| acm_df$Full.Name %in% acm_df$Roommate.Names1
| acm_df$Full.Name %in% acm_df$Roommate.Names2
| acm_df$Full.Name %in% acm_df$Roommate.Names3
| acm_df$Full.Name %in% acm_df$Roommate.Names4, ]
roommates_df = roommates_df[, c("acm_id", "Full.Name", "Roommate.Names1", "Roommate.Names2", "Roommate.Names3", "Roommate.Names4")]
acm_df[] <- lapply(acm_df, as.character)
roommates_df[] <- lapply(roommates_df, as.character)
for (x in roommates_df$Full.Name){
# select other rows containing ACM name
#roommates_df$Full.Name == x
other_roommates = subset(roommates_df, apply(roommates_df, 1, function(y){any(y == x)}))
roommates_list = unique(c(as.character(other_roommates$Full.Name),
as.character(other_roommates$Roommate.Names1),
as.character(other_roommates$Roommate.Names2),
as.character(other_roommates$Roommate.Names3),
as.character(other_roommates$Roommate.Names4)))
roommate_list = sort(roommates_list[!is.na(roommates_list)])
acm_df$Roommate.Names1[roommates_df$Full.Name == x] = roommate_list[1]
acm_df$Roommate.Names2[roommates_df$Full.Name == x] = roommate_list[2]
acm_df$Roommate.Names3[roommates_df$Full.Name == x] = roommate_list[3]
acm_df$Roommate.Names4[roommates_df$Full.Name == x] = roommate_list[4]
#roommates_df$Roomies[roommates_df$Full.Name == x] = paste(sort(roommates_list[!is.na(roommates_list)]), collapse=", ")
}
acm_df
roommates_df
roommates_df = acm_df[acm_df$Roomates == 'Yes'
| acm_df$Full.Name %in% acm_df$Roommate.Names1
| acm_df$Full.Name %in% acm_df$Roommate.Names2
| acm_df$Full.Name %in% acm_df$Roommate.Names3
| acm_df$Full.Name %in% acm_df$Roommate.Names4, ]
roommates_df = roommates_df[, c("acm_id", "Full.Name", "Roommate.Names1", "Roommate.Names2", "Roommate.Names3", "Roommate.Names4")]
roommates_df[] <- lapply(roommates_df, as.character)
for (x in roommates_df$Full.Name){
# select other rows containing ACM name
#roommates_df$Full.Name == x
other_roommates = subset(roommates_df, apply(roommates_df, 1, function(y){any(y == x)}))
roommates_list = unique(c(as.character(other_roommates$Full.Name),
as.character(other_roommates$Roommate.Names1),
as.character(other_roommates$Roommate.Names2),
as.character(other_roommates$Roommate.Names3),
as.character(other_roommates$Roommate.Names4)))
roommate_list = sort(roommates_list[!is.na(roommates_list)])
roommates_df$Roommate.Names1[roommates_df$Full.Name == x] = roommate_list[1]
roommates_df$Roommate.Names2[roommates_df$Full.Name == x] = roommate_list[2]
roommates_df$Roommate.Names3[roommates_df$Full.Name == x] = roommate_list[3]
roommates_df$Roommate.Names4[roommates_df$Full.Name == x] = roommate_list[4]
#roommates_df$Roomies[roommates_df$Full.Name == x] = paste(sort(roommates_list[!is.na(roommates_list)]), collapse=", ")
}
roommates_df
acm_df <- read.csv(file = "Input 1 - ACM Data.csv")
acm_commutes <- read_excel(path = "Input 2 - ACM Commutes.xlsx")
school_df <- read_excel(path = "Input 3 - School Data.xls")
# Add id columns
acm_df$acm_id <- 1:nrow(acm_df)
acm_commutes$acm_id <- 1:nrow(acm_commutes)
school_df$sch_id <- 1:nrow(school_df)
# Commute times in long format will be easier to index and subset. This can be accomplished in the output of "gmapsdistance" function later.
acm_commutes_long <-
select(acm_commutes, -or) %>%
gather(dest, dist, -acm_id) %>%
mutate(id_dest = paste(acm_id, dest, sep = "_"))
roommates_df = acm_df[acm_df$Roomates == 'Yes'
| acm_df$Full.Name %in% acm_df$Roommate.Names1
| acm_df$Full.Name %in% acm_df$Roommate.Names2
| acm_df$Full.Name %in% acm_df$Roommate.Names3
| acm_df$Full.Name %in% acm_df$Roommate.Names4, ]
roommates_df = roommates_df[, c("acm_id", "Full.Name", "Roommate.Names1", "Roommate.Names2", "Roommate.Names3", "Roommate.Names4")]
roommates_df[] <- lapply(roommates_df, as.character)
for (x in roommates_df$Full.Name){
# select other rows containing ACM name
#roommates_df$Full.Name == x
other_roommates = subset(roommates_df, apply(roommates_df, 1, function(y){any(y == x)}))
roommates_list = unique(c(as.character(other_roommates$Full.Name),
as.character(other_roommates$Roommate.Names1),
as.character(other_roommates$Roommate.Names2),
as.character(other_roommates$Roommate.Names3),
as.character(other_roommates$Roommate.Names4)))
roommate_list = sort(roommates_list[!is.na(roommates_list)])
roommates_df$Roommate.Names1[roommates_df$Full.Name == x] = roommate_list[1]
roommates_df$Roommate.Names2[roommates_df$Full.Name == x] = roommate_list[2]
roommates_df$Roommate.Names3[roommates_df$Full.Name == x] = roommate_list[3]
roommates_df$Roommate.Names4[roommates_df$Full.Name == x] = roommate_list[4]
#roommates_df$Roomies[roommates_df$Full.Name == x] = paste(sort(roommates_list[!is.na(roommates_list)]), collapse=", ")
}
roommates_df
acm_df <- read.csv(file = "Input 1 - ACM Data.csv")
acm_commutes <- read_excel(path = "Input 2 - ACM Commutes.xlsx")
school_df <- read_excel(path = "Input 3 - School Data.xls")
# Add id columns
acm_df$acm_id <- 1:nrow(acm_df)
acm_commutes$acm_id <- 1:nrow(acm_commutes)
school_df$sch_id <- 1:nrow(school_df)
# Commute times in long format will be easier to index and subset. This can be accomplished in the output of "gmapsdistance" function later.
acm_commutes_long <-
select(acm_commutes, -or) %>%
gather(dest, dist, -acm_id) %>%
mutate(id_dest = paste(acm_id, dest, sep = "_"))
roommates_df = acm_df[acm_df$Roomates == 'Yes'
| acm_df$Full.Name %in% acm_df$Roommate.Names1
| acm_df$Full.Name %in% acm_df$Roommate.Names2
| acm_df$Full.Name %in% acm_df$Roommate.Names3
| acm_df$Full.Name %in% acm_df$Roommate.Names4, ]
roommates_df = roommates_df[, c("acm_id", "Full.Name", "Roommate.Names1", "Roommate.Names2", "Roommate.Names3", "Roommate.Names4")]
acm_df[] <- lapply(acm_df, as.character)
roommates_df[] <- lapply(roommates_df, as.character)
for (x in roommates_df$Full.Name){
# select other rows containing ACM name
#roommates_df$Full.Name == x
other_roommates = subset(roommates_df, apply(roommates_df, 1, function(y){any(y == x)}))
roommates_list = unique(c(as.character(other_roommates$Full.Name),
as.character(other_roommates$Roommate.Names1),
as.character(other_roommates$Roommate.Names2),
as.character(other_roommates$Roommate.Names3),
as.character(other_roommates$Roommate.Names4)))
roommate_list = sort(roommates_list[!is.na(roommates_list)])
acm_df$Roommate.Names1[roommates_df$Full.Name == x] = roommate_list[1]
acm_df$Roommate.Names2[roommates_df$Full.Name == x] = roommate_list[2]
acm_df$Roommate.Names3[roommates_df$Full.Name == x] = roommate_list[3]
acm_df$Roommate.Names4[roommates_df$Full.Name == x] = roommate_list[4]
#roommates_df$Roomies[roommates_df$Full.Name == x] = paste(sort(roommates_list[!is.na(roommates_list)]), collapse=", ")
}
acm_df
acm_df[] <- lapply(acm_df, as.factor)
acm_df
acm_df$Roommate.Names1:Roommate.Names4
acm_df <- read.csv(file = "Input 1 - ACM Data.csv")
acm_commutes <- read_excel(path = "Input 2 - ACM Commutes.xlsx")
school_df <- read_excel(path = "Input 3 - School Data.xls")
# Add id columns
acm_df$acm_id <- 1:nrow(acm_df)
acm_commutes$acm_id <- 1:nrow(acm_commutes)
school_df$sch_id <- 1:nrow(school_df)
# Commute times in long format will be easier to index and subset. This can be accomplished in the output of "gmapsdistance" function later.
acm_commutes_long <-
select(acm_commutes, -or) %>%
gather(dest, dist, -acm_id) %>%
mutate(id_dest = paste(acm_id, dest, sep = "_"))
roommates_df = acm_df[acm_df$Roomates == 'Yes'
| acm_df$Full.Name %in% acm_df$Roommate.Names1
| acm_df$Full.Name %in% acm_df$Roommate.Names2
| acm_df$Full.Name %in% acm_df$Roommate.Names3
| acm_df$Full.Name %in% acm_df$Roommate.Names4, ]
roommates_df[] <- lapply(roommates_df, as.character)
acm_df[] <- lapply(acm_df, as.character)
for (x in roommates_df$Full.Name){
# select other rows containing ACM name
#roommates_df$Full.Name == x
# Select any rows containing ACM name
other_roommates = subset(roommates_df, apply(roommates_df, 1, function(y){any(y == x)}))
# Select unique roommate names
roommates_list = unique(c(as.character(other_roommates$Full.Name),
as.character(other_roommates$Roommate.Names1),
as.character(other_roommates$Roommate.Names2),
as.character(other_roommates$Roommate.Names3),
as.character(other_roommates$Roommate.Names4)))
#Sort alphabetically and remove NAs
roommate_list = sort(roommates_list[!is.na(roommates_list)])
acm_df$Roommate.Names1[roommates_df$Full.Name == x] = roommate_list[1]
acm_df$Roommate.Names2[roommates_df$Full.Name == x] = roommate_list[2]
acm_df$Roommate.Names3[roommates_df$Full.Name == x] = roommate_list[3]
acm_df$Roommate.Names4[roommates_df$Full.Name == x] = roommate_list[4]
#roommates_df$Roomies[roommates_df$Full.Name == x] = paste(sort(roommates_list[!is.na(roommates_list)]), collapse=", ")
}
acm_df$Roommate.Names1:Roommate.Names4
acm_df$Roommate.Names1:acm_df$Roommate.Names4
acm_df[Roommate.Names1:Roommate.Names4]
acm_df[acm_df$Roommate.Names1:acm_df$Roommate.Names4]
acm_df <- read.csv(file = "Input 1 - ACM Data.csv")
acm_commutes <- read_excel(path = "Input 2 - ACM Commutes.xlsx")
school_df <- read_excel(path = "Input 3 - School Data.xls")
# Add id columns
acm_df$acm_id <- 1:nrow(acm_df)
acm_commutes$acm_id <- 1:nrow(acm_commutes)
school_df$sch_id <- 1:nrow(school_df)
# Commute times in long format will be easier to index and subset. This can be accomplished in the output of "gmapsdistance" function later.
acm_commutes_long <-
select(acm_commutes, -or) %>%
gather(dest, dist, -acm_id) %>%
mutate(id_dest = paste(acm_id, dest, sep = "_"))
# Dataframe of all ACMs who mentioned roommates or were mentioned by others
roommates_df = acm_df[acm_df$Roomates == 'Yes'
| acm_df$Full.Name %in% acm_df$Roommate.Names1
| acm_df$Full.Name %in% acm_df$Roommate.Names2
| acm_df$Full.Name %in% acm_df$Roommate.Names3
| acm_df$Full.Name %in% acm_df$Roommate.Names4, ]
roommates_df[] <- lapply(roommates_df, as.character)
acm_df$Roommate.Names1 = as.character(acm_df$Roommate.Names1)
acm_df$Roommate.Names2 = as.character(acm_df$Roommate.Names2)
acm_df$Roommate.Names3 = as.character(acm_df$Roommate.Names3)
acm_df$Roommate.Names4 = as.character(acm_df$Roommate.Names4)
for (x in roommates_df$Full.Name){
# select other rows containing ACM name
#roommates_df$Full.Name == x
# Select any rows containing ACM name
other_roommates = subset(roommates_df, apply(roommates_df, 1, function(y){any(y == x)}))
# Select unique roommate names
roommates_list = unique(c(other_roommates$Full.Name,
other_roommates$Roommate.Names1,
other_roommates$Roommate.Names2,
other_roommates$Roommate.Names3,
other_roommates$Roommate.Names4))
#Sort alphabetically and remove NAs
roommate_list = sort(roommates_list[!is.na(roommates_list)])
acm_df$Roommate.Names1[roommates_df$Full.Name == x] = roommate_list[1]
acm_df$Roommate.Names2[roommates_df$Full.Name == x] = roommate_list[2]
acm_df$Roommate.Names3[roommates_df$Full.Name == x] = roommate_list[3]
acm_df$Roommate.Names4[roommates_df$Full.Name == x] = roommate_list[4]
#roommates_df$Roomies[roommates_df$Full.Name == x] = paste(sort(roommates_list[!is.na(roommates_list)]), collapse=", ")
}
acm_df
# convert names to acm_id
# for each ACM with roomamtes and without manual placement
# find other valid placement (remember not to move any manual.placements)
